pipeline {
    agent any
    stages {
        stage('Load Utilities') {
            steps {
                script {
                    // Load the external Groovy script
                    def configScript = load "config.groovy"
                    slackNotifier = load "slack_notifier.groovy"
                    pipelineUtils = load "pipeline_utils.groovy"
                    
                    // Call getConfig function to get configuration
                    def config = configScript.getConfig()
                    
                    // Store configuration values in environment variables
                    env.TEST_BUILDING = config.TEST_BUILDING
                    SLACK_CHANNEL = config.SLACK_CHANNEL
                    TEST_PROJECT_SOURCE_FOLDER = config.TEST_PROJECT_SOURCE_FOLDER
                    TEST_PROJECT_TESTS_FOLDER = config.TEST_PROJECT_TESTS_FOLDER
                }
            }
        }

        stage('Prep work') {
            parallel {
                stage('Clean up folder') {
                    steps {
                        script {
                            echo "Slack Channel: ${env.SLACK_CHANNEL}"
                            echo "Loaded Slack Notifier: ${slackNotifier}"
                            echo "Slack Channel: ${SLACK_CHANNEL}"
                            echo ${TEST_PROJECT_SOURCE_FOLDER} 
                            echo ${TEST_PROJECT_TESTS_FOLDER} 
                            slackNotifier.sendSlackNotification()
                            pipelineUtils.cleanWorkspace()
                        }
                    }
                }
            }
        }
    }
}
